variables:
  system.debug: 'false'
  lastCommitMessage: Changed the button background color
  pr.check.id: ''
  pr.status.id: ''
  user-defined.JAVA_HOME: $(JAVA_HOME_17_X64)
  MOBILECENTER_OUTPUT_DIRECTORY: $(Build.ArtifactStagingDirectory)/build
  MOBILECENTER_BRANCH: app-center
  MOBILECENTER_BUILD_ID: $(Build.BuildNumber)
  MOBILECENTER_SOURCE_DIRECTORY: $(Build.Repository.LocalPath)
  MOBILECENTER_TRIGGER: continuous
  APPCENTER_OUTPUT_DIRECTORY: $(Build.ArtifactStagingDirectory)/build
  APPCENTER_BRANCH: app-center
  APPCENTER_BUILD_ID: $(Build.BuildNumber)
  APPCENTER_SOURCE_DIRECTORY: $(Build.Repository.LocalPath)
  APPCENTER_TRIGGER: continuous
  artifactVersioning.build.format: buildId
  buildScripts.toolset: '{}'
  javaScriptRunTests: 'false'
  MOBILECENTER_REACTNATIVE_PACKAGE: package.json
  APPCENTER_REACTNATIVE_PACKAGE: package.json
  moduleName: app
  buildVariant: release
  isRoot: 'false'
  runTests: 'false'
  runLint: 'false'
  keystoreEncoded: null
  automaticSigning: 'true'
  buildBundle: 'true'
  MOBILECENTER_ANDROID_MODULE: app
  MOBILECENTER_ANDROID_VARIANT: release
  APPCENTER_ANDROID_MODULE: app
  APPCENTER_ANDROID_VARIANT: release
  SONOMA_API_SERVER: 'https://api.appcenter.ms'
  SONOMA_API_VERSION: v0.1
  VSMobileCenterUpload.ContinueIfSymbolsNotFound: 'true'
  sonoma.tags: >-
    continuous,javascript,android,signed,android-app-bundle,testcloud,distribution
name: $(Build.BuildId)
resources:
  repositories:
    - repository: self
      type: git
      ref: refs/heads/app-center
jobs:
  - job: Phase_1
    displayName: Build
    timeoutInMinutes: 45
    cancelTimeoutInMinutes: 0
    pool:
      name: Azure Pipelines
      vmImage: macOS-11
    steps:
      - checkout: self
        clean: true
        submodules: recursive
        lfs: true
      - task: PowerShell@2
        displayName: Install build scripts
        continueOnError: true
        inputs:
          targetType: inline
          scriptName: ''
          script: >-
            Set-Location -Path '$(Agent.HomeDirectory)'

            Invoke-WebRequest -Uri
            'https://appcenterbuildassets.azureedge.net/buildscripts/appcenter-build-assets-latest.zip'
            -OutFile 'appcenter-build-assets-latest.zip'

            if (Test-Path ./scripts) { Remove-Item -Path ./scripts -Force
            -Recurse }

            New-Item -ItemType directory -Path 'scripts' | Out-Null

            unzip -q -d 'scripts' 'appcenter-build-assets-latest.zip'

            Invoke-Expression 'bash ./scripts/init.sh'
          failOnStderr: true
      - task: Bash@3
        displayName: Select Node.js Version v2
        inputs:
          filePath: $(Agent.HomeDirectory)/scripts/select-node-version.sh
          arguments: node20
          failOnStderr: true
      - task: CmdLine@1
        displayName: yarn/npm install
        inputs:
          filename: sh
          arguments: >-
            -c "if [ -f yarn.lock ]; then { yarn install
            --network-timeout=600000 && yarn list --depth=0; } else npm install;
            fi"
      - task: CmdLine@2
        displayName: Run Jetify
        inputs:
          script: |2-

                        if [ -f node_modules/jetifier/bin/jetify ]; then
                            node node_modules/jetifier/bin/jetify
                        else
                            echo "Warning: node_modules/jetifier/bin/jetify does not exist"
                            echo "         source code will not be upgraded to AndroidX"
                        fi
                        
          failOnStderr: true
      - task: ShellScript@2
        displayName: Tag build
        inputs:
          scriptPath: $(Agent.HomeDirectory)/scripts/emit-tags.sh
          args: $(sonoma.tags)
      - task: Gradle@1
        displayName: Gradle Task
        inputs:
          wrapperScript: android/gradlew
          tasks: 'clean :app:assembleRelease :app:bundleRelease '
          options: >-
            -DAPPCENTER_BUILD_VERSION="$(Build.BuildNumber)"
            -DMOBILECENTER_BUILD_VERSION="$(Build.BuildNumber)" -p "android"
          jdkArchitecture: x86
          publishJUnitResults: false
          sqAnalysisBreakBuildIfQualityGateFailed: false
      - task: ShellScript@2
        name: appcenter_android_postprocess_output
        displayName: Android Postprocess
        inputs:
          scriptPath: $(Agent.HomeDirectory)/scripts/android-postprocess.sh
          args: $(build.sourcesdirectory)/android/app/build/outputs/apk
      - task: CopyFiles@2
        displayName: Copy build files to staging
        inputs:
          SourceFolder: $(build.sourcesdirectory)/android/app/build/outputs
          Contents: apk/**/*.apk
          TargetFolder: $(build.artifactstagingdirectory)/build
          OverWrite: true
          flattenFolders: true
      - task: CopyFiles@2
        displayName: Copy bundle files to staging
        inputs:
          SourceFolder: $(build.sourcesdirectory)/android/app/build/outputs
          Contents: bundle/**/*.aab
          TargetFolder: $(build.artifactstagingdirectory)/bundle
          OverWrite: true
          flattenFolders: true
      - task: CopyFiles@2
        displayName: Copy mapping files to staging
        inputs:
          SourceFolder: $(build.sourcesdirectory)/android/app/build/outputs
          Contents: mapping/**/mapping.txt
          TargetFolder: $(build.artifactstagingdirectory)/mapping
          OverWrite: true
          flattenFolders: true
      - task: PublishBuildArtifacts@1
        displayName: Publish build
        inputs:
          PathtoPublish: $(build.artifactstagingdirectory)/build
          ArtifactName: build
      - task: PublishBuildArtifacts@1
        displayName: Publish bundle
        continueOnError: true
        inputs:
          PathtoPublish: $(build.artifactstagingdirectory)/bundle
          ArtifactName: bundle
      - task: PublishBuildArtifacts@1
        displayName: Publish mapping
        condition: >-
          and(succeeded(),
          startsWith(variables['appcenter_android_postprocess_output.mapping'],
          true))
        continueOnError: true
        inputs:
          PathtoPublish: $(build.artifactstagingdirectory)/mapping
          ArtifactName: mapping
      - task: ShellScript@2
        displayName: Tag build
        inputs:
          scriptPath: $(Agent.HomeDirectory)/scripts/emit-tags.sh
          args: $(sonoma.tags)
      - task: CmdLine@1
        displayName: Generate UITest tests
        condition: 'and(succeeded(), ne(variables[''Build.Reason''], ''pullRequest''))'
        inputs:
          filename: appcenter
          arguments: >-
            test generate uitest --platform "android" --output-path
            "$(Build.ArtifactStagingDirectory)/GeneratedTest"
      - task: NuGetToolInstaller@1
        displayName: Install Nuget
        condition: 'and(succeeded(), ne(variables[''Build.Reason''], ''pullRequest''))'
        inputs:
          versionSpec: 3.3.0
      - task: NuGetCommand@2
        displayName: Restore Nuget
        condition: 'and(succeeded(), ne(variables[''Build.Reason''], ''pullRequest''))'
        inputs:
          solution: $(Build.ArtifactStagingDirectory)/GeneratedTest/*.sln
      - task: MSBuild@1
        displayName: Build UITest project
        condition: 'and(succeeded(), ne(variables[''Build.Reason''], ''pullRequest''))'
        inputs:
          solution: $(Build.ArtifactStagingDirectory)/GeneratedTest/*.sln
          configuration: Release
          logProjectEvents: true
          createLogFile: true
          msbuildVersion: 14
      - task: AppCenterTest@1
        displayName: Run generated tests on real devices
        condition: 'and(succeeded(), ne(variables[''Build.Reason''], ''pullRequest''))'
        inputs:
          app: $(build.artifactstagingdirectory)/build/**/*.apk
          artifactsDir: $(Build.ArtifactStagingDirectory)/Artifacts
          framework: uitest
          uitestBuildDir: >-
            $(Build.ArtifactStagingDirectory)/GeneratedTest/AppCenter.UITest.Android/bin/Release
          uitestStoreFile: ''
          serverEndpoint: fc7b330f-a9ad-4785-8516-795252a6d60f
          appSlug: deepakkumar26/Sabji-Wallah-1
          devices: any_top_1_device
          series: launch-tests
          runOpts: ' -p msft/test-run-origin=Build/Launch'
          debug: true
      - task: AppCenterDistribute@3
        displayName: Create distribution
        condition: 'and(succeeded(), ne(variables[''Build.Reason''], ''pullRequest''))'
        inputs:
          serverEndpoint: fc7b330f-a9ad-4785-8516-795252a6d60f
          appSlug: deepakkumar26/Sabji-Wallah-1
          destinationGroupIds: 00000000-0000-0000-0000-000000000000
          isSilent: false
          releaseNotesInput: $(lastCommitMessage)
          app: $(build.artifactstagingdirectory)/build/**/*.apk
          symbolsType: Android
          mappingTxtPath: $(build.artifactstagingdirectory)/mapping/**/mapping.txt
          nativeLibrariesPath: $(build.sourcesdirectory)/**/*.so
